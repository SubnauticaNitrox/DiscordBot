// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NitroxDiscordBot.Db;

#nullable disable

namespace NitroxDiscordBot.Db.Migrations
{
    [DbContext(typeof(BotContext))]
    partial class BotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("NitroxDiscordBot.Db.Models.AutoResponse", b =>
                {
                    b.Property<int>("AutoResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("AutoResponseId");

                    b.ToTable("AutoResponses");
                });

            modelBuilder.Entity("NitroxDiscordBot.Db.Models.AutoResponse+Filter", b =>
                {
                    b.Property<int>("FilterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AutoResponseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FilterId");

                    b.HasIndex("AutoResponseId");

                    b.ToTable("AutoResponseFilters");
                });

            modelBuilder.Entity("NitroxDiscordBot.Db.Models.AutoResponse+Response", b =>
                {
                    b.Property<int>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AutoResponseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ResponseId");

                    b.HasIndex("AutoResponseId");

                    b.ToTable("AutoResponseResponses");
                });

            modelBuilder.Entity("NitroxDiscordBot.Db.Models.Cleanup", b =>
                {
                    b.Property<int>("CleanupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("AgeThreshold")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CronSchedule")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("CleanupId");

                    b.ToTable("Cleanups");
                });

            modelBuilder.Entity("NitroxDiscordBot.Db.Models.AutoResponse+Filter", b =>
                {
                    b.HasOne("NitroxDiscordBot.Db.Models.AutoResponse", null)
                        .WithMany("Filters")
                        .HasForeignKey("AutoResponseId");
                });

            modelBuilder.Entity("NitroxDiscordBot.Db.Models.AutoResponse+Response", b =>
                {
                    b.HasOne("NitroxDiscordBot.Db.Models.AutoResponse", null)
                        .WithMany("Responses")
                        .HasForeignKey("AutoResponseId");
                });

            modelBuilder.Entity("NitroxDiscordBot.Db.Models.AutoResponse", b =>
                {
                    b.Navigation("Filters");

                    b.Navigation("Responses");
                });
#pragma warning restore 612, 618
        }
    }
}
